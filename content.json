{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-03-06T07:11:20.578Z","updated":"2020-03-06T07:11:20.578Z","comments":false,"path":"/404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-03-06T07:11:20.587Z","updated":"2020-03-06T07:11:20.587Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2020-03-06T07:11:20.590Z","updated":"2020-03-06T07:11:20.590Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-03-06T07:11:20.592Z","updated":"2020-03-06T07:11:20.592Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-03-06T07:11:20.595Z","updated":"2020-03-06T07:11:20.595Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-03-06T07:11:20.599Z","updated":"2020-03-06T07:11:20.599Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-03-06T07:11:20.603Z","updated":"2020-03-06T07:11:20.603Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"xinnn每日记","slug":"xinnn每日记","date":"2020-03-15T05:20:26.000Z","updated":"2020-03-15T05:37:03.535Z","comments":true,"path":"2020/03/15/xinnn每日记/","link":"","permalink":"http://yoursite.com/2020/03/15/xinnn%E6%AF%8F%E6%97%A5%E8%AE%B0/","excerpt":"","text":"2020-03-15 123曾几何时，你可以替别人分析得头头是道的东西，到了你自己身上，你却弄得稀里糊涂。以前很多想不明白的事情，只有自己经历过了才能体会。每个人都是独立的个体，谁也没办法做到感同身受。","categories":[],"tags":[],"author":"John Doe"},{"title":"JavaScript","slug":"JavaScript-1","date":"2020-03-07T08:48:00.000Z","updated":"2020-03-09T02:29:09.885Z","comments":true,"path":"2020/03/07/JavaScript-1/","link":"","permalink":"http://yoursite.com/2020/03/07/JavaScript-1/","excerpt":"","text":"1、快速入门1.1Javascript的引用1.自动弹框 12jx.js:alert('hello,world'); 2.通过js文件来弹框 1&lt;script src=\"js/jx.js\"&gt;&lt;/script&gt; 1.2基本语法入门12345678910&lt;script&gt; // 1. 定义变量 变量类型 变量名 = 变量值 （无论什么变量名，变量类型都是var） var score =70; var name =\"jixin\"; // alert(num); // 2. 条件控制 if (score&gt;60 &amp;&amp; score&lt;80)&#123; alert(\"true\"); &#125;&lt;/script&gt; 1.3数据类型123456789101112131415161718192021222324数值，文本，图形，音频，视频……Number , JavaScript不区分整数和浮点数，统一用Number表示，以下都是合法的Number类型;123; // 整数1230.456; // 浮点数0.4561.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5-99; // 负数NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity比较运算符！！！= 赋值== 等于（类型不一样，值一样。，也会判断true）坚持不要使用！=== 绝对等于（类型一样，值一样，结果为true）NAN===NAN false NAN与所有的数值都不相等，包括自己只能通过isNAN(NAN)来判断这个数是否是NAN数组var arr = [1, 2, 3.14, 'Hello', null, true];arr[0]; // 返回索引为0的元素，即1arr[5]; // 返回索引为5的元素，即truearr[6]; // 索引超出了范围，返回undefinednew Array(1, 2, 3); // 创建了数组[1, 2, 3] 1.4严格检查模式1234567'use strict'; 严格检查模式，预防JavaScript的随意性导致产生的一些问题,必须写在JavaScript的第一行局部变量都建议用let去定义&lt;script&gt; 'use strict'; //ES6 let settings搜索es6 let i =1;&lt;/script&gt; 2、数据类型2.1字符串1.正常字符串我们使用单引号或是双引号 2.注意转义字符\\ 3.多行字符串编写 1234567&lt;script&gt; 'use strict' var msg = `hello world 你好 `&lt;/script&gt; 4.模板字符串 123456&lt;script&gt; 'use strict' let name = \"jixin\" let msg = `你好呀，$&#123;name&#125;`&lt;/script&gt;","categories":[],"tags":[],"author":"John Doe"},{"title":"WELCOME","slug":"hello-world","date":"2020-03-06T01:46:00.000Z","updated":"2020-03-09T02:48:25.793Z","comments":true,"path":"2020/03/06/hello-world/","link":"","permalink":"http://yoursite.com/2020/03/06/hello-world/","excerpt":"","text":"走过路过不要错过，有钱的捧个钱场，没钱的捧个人场~","categories":[],"tags":[]}]}